<?php
	$thispage = "speakers";
	$parent = "events";
	$title = "Speakers";
	include 'includes/_top.php';
?>

<div id="content">

<p><font size="+2">Speakers</font></p>

<p>
<center>
The following is a partial listing of speakers confirmed thus far.<br>
To see the conference schedule, please visit our <a href = "events.php">Events Page</a>.
</center>
</p>

<table border="1" class="speakers">
<!-- BEGIN TEMPLATE
<tr><td colspan=2 bgcolor=#6B7368><center><b><i>Speakers</i></b></center></td></tr>
  <tr>
      <td><a href="#StephenWolfram">Dr. Stephen Wolfram</a></td>
      <td>Creator of <a href="http://www.wolfram.com" class="external">Mathematica</a>
          and <a href="http://www.wolframscience.com" class="external">A New Kind of Science</a>
      <br><a href="#StephenWolframAbstract">"A New Kind of Computer Science and the Future of Computing"</a> (Keynote)</td>
  </tr>
END TEMPLATE -->
<tr><td colspan=2><center><b><i>Speakers</i></b></center></td></tr>
  <tr>
      <td><a href="http://www.secure-endpoints.com/">Jeffrey Altman</a></td>
      <td>Developer of AFS for Windows</td>
  </tr>
  <tr>
      <td><a href="#KwabenaBoahen">Kwabena Boahen</a></td>
      <td>Associate Professor of Bioengineering, Stanford University</td>
  </tr>
  <tr>
      <td><a href="#AdrianBowyer">Adrian Bowyer</a></td>
      <td>Senior Lecturer in Mechanical Engineering, University of Bath; creator of the <a href="http://reprap.org">RepRap</a> project</td>
  </tr>
  <tr>
      <td><a href="http://rvb.roosterteeth.com/">Burnie Burns</a></td>
      <td>Co-creator of "Red vs. Blue"</td>
  </tr>
  <tr>
      <td><a href="#HaroldCohen">Harold Cohen</a></td>
      <td>Professor Emeritus of Visual Arts, University of California, San Diego; creator of <a href="http://www.kurzweilcyberart.com/">AARON</a></td>
  </tr>
  <tr>
      <td><a href="http://www.pbs.org/cringely/">Robert&nbsp;X.&nbsp;Cringely</a></td>
      <td>PBS columnist and creator of "Triumph of the Nerds"</td>
  </tr>
  <tr>
      <td><a href="http://egofood.blogspot.com/">Chris DiBona</a></td>
      <td>Open Source Software at Google</td>
  </tr>
  <tr>
      <td><a href="#JawedKarim">Jawed Karim</a></td>
      <td>co-founder of YouTube</td>
  </tr>
  <tr>
      <td><a href="#EricJohnson">Eric Johnson</a></td>
      <td>FactSet Build Systems</td>
  </tr>
  <tr>
      <td><a href="http://www.cs.cornell.edu/home/llee/">Lillian Lee</a></td>
      <td>Associate Professor of Computer Science, Cornell University</td>
  </tr>
  <tr>
      <td><a href="http://www.levchin.com/">Max Levchin</a></td>
      <td>Co-founder of Paypal and founder of Slide.com</td>
  </tr>
  <tr>
      <td><a href="#ChipMayse">Chip Mayse</a></td>
      <td>SAIC satellite systems & numerical methods</td>
  </tr>
  <tr>
      <td><a href="#JimMiller">Jim Miller</a></td>
      <td>Microsoft CLR</td>
  </tr>
  <tr>
      <td><a href="http://www.crhc.uiuc.edu/~sjp/">Sanjay Patel</a></td>
      <td>Associate Professor of Electrical and Computer Engineering, University of Illinois at Urbana-Champaign and co-founder of AGEIA</td>
  </tr>
  <tr>
      <td><a href="http://www.ece.utexas.edu/~patt/">Yale N. Patt</a></td>
      <td>Professor of Electrical and Computer Engineering, University of Texas at Austin</td>
  </tr>
  <tr>
      <td><a href="http://www.redhat.com/magazine/008jun05/features/awards/">J. Rambhaskar</a></td>
      <td>Enterprise Linux systems, Morgan Stanley</td>
  </tr>
  <tr>
      <td><a href="#JoelSpolsky">Joel Spolsky</a></td>
      <td>"Joel on Software" blog and CEO of Fog Creek Software</td>
  </tr>
  <tr>
      <td><a href="#AlexStamos">Alex Stamos</a></td>
      <td>Principal Partner, iSEC Partners</td>
  </tr>
  <tr>
      <td><a href="#MichaelSwift">Michael Swift</a></td>
      <td>Assistant Professor of Computer Science, University of Wisconsin-Madison</td>
  </tr>
</table>

<!-- BEGIN TEMPLATE
<hr>
<h2><a name="StephenWolframAbstract">A New Kind of Computer Science and the Future of Computing</a> (Keynote)</h2>
<h2><a name="StephenWolfram">Dr. Stephen Wolfram</a></h2>
<p>
Stephen Wolfram was educated at Eton, Oxford, and Caltech, receiving his
Ph.D. in theoretical physics in 1979 at the age of 20. His early work in
physics and computer science was recognized by a MacArthur award in 1981. In
the early 1980s he made a series of now-classic discoveries about systems
known as cellular automata, leading to numerous applications in physics,
mathematics, computer science, biology, and other fields. In 1986 he founded
Wolfram Research, Inc. and began the creation of Mathematica - now the
world's leading software system for technical computing and symbolic
programming (and tool which made A New Kind of Science possible). Over the
past decade Wolfram has divided his time between leadership of his company
and pursuit of basic science. The results of Wolfram's fifteen years of work
were presented for the first time in his book, A New Kind of Science (May
2002). An instant bestseller, A New Kind of Science constituted
international science news and quickly emerged as one of the most-discussed
science books in decades.
</p>
END TEMPLATE -->

<hr>
<h2><a name="KwabenaBoahenAbstract">Metaelectronics: Self-configuring neuromorphic systems</a></h2>
<p>
Nanoelectronic technology promises to cram a trillion transistors onto a
1cm<sup>2</sup> chip.  How do we harness all these devices? Abstraction,
which has been used until now, is becoming increasingly inadequate as
microelectronic chips approach a billion transistors.  We can learn from
biology, which handles complexity through developmental processes that
elaborate a relatively simple starting recipe into a complex mature
structure.  By borrowing from biology, we have developed two self-configuring
microelectronic chips.  These chips capture the ability of epigenetic
development to generate representations of features in neural layers and to
autoroute connections between these layers.  This metamorphic approach
provides a powerful alternative to handling complexity in nanoelectronic
systems.
</p>
<h2><a name="KwabenaBoahen" href="http://bioengineering.stanford.edu/faculty/boahen.html">Kwabena Boahen</a></h2>
<p>
Kwabena Boahen joined Stanfords Bioengineering Department as Associate
Professor in December 2005. From 1997 to 2005 he was on the faculty of
University of Pennsylvania, Philadelphia PA. He is a bioengineer who is
using silicon integrated circuits to emulate the way neurons compute,
linking the seemingly disparate fields of electronics and computer science
with neurobiology and medicine. His interest in neural networks developed
soon after he left his native Ghana to pursue undergraduate studies in
Electrical and Computer Engineering at Johns Hopkins University, Baltimore,
in 1985. He went on to earn a doctorate in Computation and Neural Systems at
the California Institute of Technology in 1997. His lab is currently
developing Neurogrid, a specialized hardware platform that will enable the
cortexs inner workings to be simulated in detailsomething outside the reach
of even the fastest supercomputers. Professor Boahens numerous contributions
to the field of neuromorphic engineering include a silicon retina that could
be used to give the blind sight and a self-organizing chip that emulates the
way the juvenile brain wires itself up. His scholarship is widely
recognized, with over sixty publications to his name, including a cover
story in the May 2005 issue of Scientific American. He has received several
distinguished honors, including a Fellowship from the Packard Foundation in
1999, a CAREER award from the National Science Foundation in 2001 and a
Young Investigator Award from the Office of Naval Research in 2002. The
professor is an avid cyclist.
</p>

<hr>
<h2><a name="AdrianBowyerAbstract">The Replicating Rapid-prototyper - moving hardware through the wires</a></h2>
<p>
This talk will be about RepRap - the replicating rapid prototyper.  RepRap
will be a desktop manufacturing system that is able to make the vast
majority of its own component parts, so - if your friend has a RepRap
machine - you can ask  him or her to make you the parts for one too.  RepRap
will be open-source, and will be distributed under the GNU General Public
Licence; so anyone can have one.
</p>
<p>
Once you have a RepRap, you will be able to download designs for a wide
range of items - from coat-hooks to cameras - and have your RepRap machine
make them.  In doing this, you will have used no goods transport, exchanged
no money, and avoided completely any industrial involvement.  You will also
be able to design and to make items yourself, and - optionally - to post
those designs online under the GPL for the benefit of others.
</p>
<p>
RepRap has the potential to completely revolutionise manufacturing and
wealth-creation for the entire world.
</p>
<h2><a name="AdrianBowyer" href="http://www.bath.ac.uk/~ensab/">Dr. Adrian Bowyer</a></h2>
<p>
In the 1970s Adrian Bowyer read for a first degree in mechanical
engineering at Imperial College, and then researched a PhD in tribology
there.  In 1977 he moved to Bath University's Maths Department to do
research in stochastic computational geometry.  He then founded the
Bath University Microprocessor Unit in 1981 and ran that for four
years.  After that he took up a lectureship in manufacturing in Bath's
Engineering Department, where he is now a senior lecturer.
</p>
<p>
His current areas of research are geometric modelling and geometric
computing in general (he is one of the authors of the Bowyer-Watson
algorithm for Voronoi diagrams), the application of computers to
manufacturing, and biomimetics.  His main work in biomimetics is on
self-copying machines.
</p>

<hr>
<h2><a name="HaroldCohenAbstract">Color, Simply.</a></h2>
<p>
AARON began more than thirty years ago as research directed to a deeper
understanding of how we make images and how we read them, than twenty years
as a professional artist had revealed. AARON was a drawing program, its
structure loosely following the then-current "expert system"paradigm, that
exhibited a distinctive "art personality" of its own, and the program--not
just its output--was widely exhibited during its first ten years. Of the
many thousands of original drawings it generated, some were colored by hand
and a few turned into paintings and murals. The problem of having a
sightless program control something as fundamentally visual as color
appeared intractable, however, and it was the mid-eighties before the first
rule-based version showed that it might be possible. It took twenty years
more for AARON to become the world-class colorist it is today.
</p><p>
This talk provides some background on the technology of color control, and
presents an overview of how the program's expertise developed, resting
finally upon a change from the implicit representation of knowledge in the
rules provided by the author, to the explicit representation of that
knowledge in structures made available to the program itself. That change
has made it possible to replace the program's extensive rule-base with a
remarkably simple algorithm that not only performs as well as the previous
rule-intensive versions, but commands a much wider range of coloring
strategies.
</p>
<h2><a name="HaroldCohen" href="http://crca.ucsd.edu/~hcohen/">Harold Cohen</a></h2>
<p>
Harold Cohen grew up in London, where he studied painting at the Slade
School of Fine Art. In the 1960s he exhibited widely, representing the UK in
the Venice Bienalle in 1966, documenta-5 in Germany and in international
museums and exhibitions around the world. In 1968 he went to California for
a one-year visiting professorship at UC San Diego, met his first computer
and never returned to London. From 1972-74 he was a visiting scholar at the
AI Lab at Stanford, and began work on the AARON program. AARON/HC have
exhibited at the Tate Gallery in London, the Brooklyn Museum, the San
Francisco Museum of Modern Art, Boston's Computer Museum and many other
prestigious venues, including Tsukuba, Japan, where they represented the US
in the World Fair of 1986. Cohen was the founding director of the Center for
Research in Computing and the Arts at UCSD. He retired from teaching in
1995, and continues to work on AARON at his home near San Diego.
</p>

<hr>
<h2><a name="JawedKarimAbstract">YouTube</a></h2>
<h2><a name="JawedKarim">Jawed Karim</a></h2>
<p>
Jawed Karim is the co-founder of the popular video sharing website YouTube.
Karim attended the University of Illinois from 1997 until 2000, when he
joined PayPal to become one of its first developers. He completed his
remaining credits at UofI by correspondence and received a B.S. in CS in
2004. In 2005 Karim co-founded YouTube with two friends, co-developing the
concept and product, and raising money from Sequoia Capital. He subsequently
acted as an advisor to the company and is a graduate student in computer
science at Stanford University and an investor in early-stage startups.
</p>
<p>
Jawed has a long history with ACM and Reflections Projections at UIUC. As a
student in 1998, he presented a conference talk, <i>"Practical Graphics
Programming,"</i> and in 1999, his team placed 2nd in MechMania.
</p>
<p>
For more information, please visit <a href="http://www.jawed.com">www.jawed.com</a>.
</p>

<hr>
<h2><a name="EricJohnsonAbstract">How to make a better make</a></h2>
<p>
Over the past few years, it has become fashionable to advocate the
virtues of a daily build.  Yet, what does it take to really make it
happen?  What kinds of processes and social behaviors does a corporate
culture have to adopt to make this happen?  And what are the long term
effects when it does?
</p><p> 
In this lecture, we'll explore the experiences of one company that has
had a daily build with weekly releases in place for nearly a decade.
We'll look at how features flow from developers to end users, the
processes to enable the delivery, and the required operational
monitoring.  We'll conclude with a brief outline of the risks and
rewards of such agile behaviors.
</p> 
<h2><a name="EricJohnson">Eric Johnson</a></h2>
<p>
After an unspeakably bad semester, Eric Johnson joined the then brand
new SigSoft chapter at the UIUC ACM.  A year and half later, he
graduated by the skin of his teeth with a BS in CS from UIUC in 1993.
He immediately joined FactSet Research Systems, where he has been ever
since.  Currently, he heads up the Market Data Engineering group that
integrates real time quotes and news feeds from around the world into
the FactSet product line.
</p>

<hr>
<h2><a name="ChipMayseAbstract">A Newton's-Method Formulation of the Reconnaissance-Satellite Maneuver-Duration Problem</a></h2>
<p>
Reconnaissance satellites often have structures that are of large
size and light weight, and (hence) relatively flexible.  Moreover, they have
limited on-board maneuvering energy.  They are therefore subject to
relatively modest dynamic limits-maximum angular velocities, accelerations,
and "jerks" (time derivatives of acceleration).  The process of maneuvering
such a vehicle to point its sensors at a sequence of targets, particularly
if these are close together, cannot be modeled accurately without accounting
for the effects of these limits.
</p>
<p>
The duration of such a maneuver ("slewing and settling") is not readily
computable in closed form, because the vehicle moves some distance during
the maneuver, affecting the required rotation angle.  Assuming that the
maneuver is a planar rotation enables constructing an iterative algorithm to
resolve these coupled quantities.  Combining vector calculus and simple
physics in a Newton's-method formulation, this algorithm is implemented in
about 100 lines of C++, and can compute about 80,000 maneuver-times per
second on current PC hardware.  Millions of such computations are required
when analyzing and generating collection schedules.
</p>
<p>
The "slew model" described is embedded in IISYS (the Integrated Intelligence
Systems Simulator), which is used by SAIC to analyze system architectures,
concepts of operation, and their interrelationships for the National
Reconnaissance Office.  Staffed mainly by Air Force and CIA personnel, the
NRO is the U. S. Government's executive agency for space-based
reconnaissance ("spy satellites").  SAIC (Science Applications International
Corporation) is an employee-owned professional-services company of about
43,000 people and annual sales approaching $8 billion.
</p>
<h2><a name="ChipMayse">Dr. "Chip" (William C.) Mayse</a></h2>
<p>
Dr. "Chip" (William C.) Mayse is in his second career, having previously
been an aerospace propulsion-systems engineer.  Originally from Indiana and
educated (BSME, MSME) at Purdue, he served in the Air Force; studied systems
management (MS) at the University of Southern California; studied theology
(MA) at Fuller Seminary (Pasadena, CA); and was a thermal-analysis engineer
at Rocket Research Company (now Aerojet-Redmond) before switching to CS. 
Since leaving UI (Ph.D. '92) he has worked in Northern Virginia, mainly on
high-performance visualization and systems-analysis software.  This includes
PowerScene, an early terrain scene-generating system; a very large and fast
graph-domain data-mining system for the Dept. of Justice; FAST (the FIA
Architecture and Scheduler Testbed), a high-fidelity satellite-constellation
simulator for Boeing Aerospace; and (currently) IISYS and COSMOS.  For its
contributions to Operation Deliberate Force and the Dayton Peace Conference,
PowerScene received a Technology Laurels Award (1995) from Aviation Week
Magazine.
</p>

<hr>
<h2><a name="YalePattAbstract">Stew</a></h2>
<p>
A stew is a collection of ingredients, prepared by simmering slowly.
My pocket dictionary also adds the definition "mental agitation."
The ingredients of this talk can come from any of the topics below,
or if anyone in the audience wants to add another ingredient to the
stew, he/she is welcome to do so.  We are computer scientists and
engineers, and we spend a lot of our energies creating technology.
My hope in this talk is to explore some of the issues we face, both
as computer people and as members of the human race.  Which ones we
spend time on depends on the audience.  I don't expect to lecture,
since I have no idea which of these you are interested in.  I am not
concerned about going off track, since there is no track.
<ul>
<li> The Correct way to introduce freshmen to computing. 
<li> The Microprocessor ten years from now. 
<li> What will computers be able to do in 20 years?
<li> Programming, and why Objects too early can be harmful.
<li> Political correctness has no place in a university classroom.
<li> Affirmative action is often problematic.
<li> Should football players be required to take courses.
<li> Should computer scientists have to study humanities.
<li> Is writing necessary in an engineering education.
<li> Computer Architecture, often considered dead, is alive and well.
<li> Control of computing in the world is no longer a US prerogative.
<li> What is the defining document of the United States of America.
<li> Four years of college: Is anything worth learning?
<li> How to get a job after graduation, ...and how to keep it.
</ul>
<h2><a name="YalePate">Prof. Yale N. Patt</a></h2>
<p>
Yale Patt is a teacher at The University of Texas at Austin.  He is also the
Ernest Cockrell, Jr. Centennial Chair in Engineering, Professor of Electrical
and Computer Engineering, and Professor of Computer Sciences.  He has done
fundamental research in microarchitecture, producing (with his students) the
HPS paradigm, the Two-level Branch Predictor, Runahead Execution, and Wish
Branches, among other things.  More importantly, he gets to teach the
introductory freshman course in computing to 400 freshmen at UT every other
Fall.  He wrote the book for that course with Professor Sanjay Patel of UIUC.
He also has an extensive consulting practice working with microprocessor
manufacturers on problems in microarchitecture and computer systems.  He has
received a number of awards for his research and teaching, perhaps most
notably the 1996 ACM/IEEE Eckert-Mauchly Award and the 2000 ACM Karl V.
Karlstrom Award.  He is a Fellow of both the IEEE and ACM.  More detail can
be found on his website: <a href="http://www.ece.utexas.edu/~patt">http://www.ece.utexas.edu/~patt</a>.
</p>

<hr>
<h2><a name="JoelSpolskyAbstract">Great Software</a></h2>
<p>
Too many times you see teams create very decent products that, for whatever
reason, fail to rise above the crowd and truly capture the popular
imagination. They are surprised when their products are mostly ignored by
the marketplace, which seems to be captivated by some other shiny geegaw
that's functionally inferior and more expensive.
</p>
<p>
In many product categories, from software to consumer electronics, the
product with the most market share is often more expensive and less
functional than the number two product. I will explore why this happens and
suggest some ways to design a blue chip product that people will love. After
you get great software and products using the usual repertoire of debugging,
usability testing, etc., you have to go still further and think about
beauty, user happiness, and emotional impact.
</p>
<h2><a name="JoelSpolsky">Joel Spolsky</a></h2>
<p>Joel Spolsky is a globally-recognized expert on the software development process. His website Joel on Software (<a href="http://www.joelonsoftware.com">www.joelonsoftware.com</a>) is popular with software developers around the world and has been translated into over thirty languages. As the founder of Fog Creek Software in New York City, he created FogBugz, a popular project management system for software teams. Joel has worked at Microsoft, where he designed VBA as a member of the Excel team, and at Juno Online Services, developing an Internet client used by millions. He has written two books: User Interface Design for Programmers (Apress, 2001) and Joel on Software (Apress, 2004). Joel holds a BS from Yale in Computer Science. Before college he served in the Israeli Defense Forces as a paratrooper, and he was one of the founders of Kibbutz Hanaton.
</p>
<hr>
<h2><a name="AlexStamosAbstract">Breaking AJAX Web Applications: Vulns 2.0 in Web 2.0</a></h2>
<p>The Internet industry is currently riding a new wave of investor and
consumer excitement, much of which is built upon the promise of .Web
2.0. technologies giving us faster, more exciting, and more useful web
applications. One of the fundamentals of .Web 2.0. is known as
Asynchronous JavaScript and XML (AJAX), which is an amalgam of
techniques developers can use to give their applications the level of
interactivity of client-side software with the platform-independence of
JavaScript.
</p>
<p>
Unfortunately, there is a dark side to this new technology that has not
been properly explored. The tighter integration of client and server
code, as well as the invention of much richer downstream protocols that
are parsed by the web browser has created new attacks as well as made
classic web application attacks more difficult to prevent.
</p>
<p>
We will discuss XSS, Cross-Site Request Forgery (XSRF), parameter
tampering and object serialization attacks in AJAX applications, and
will publicly release an AJAX-based XSRF attack framework. We will also
be releasing a security analysis of several popular AJAX frameworks,
including Microsoft Atlas, JSON-RPC and SAJAX. The talk will include
live demos against vulnerable web applications, and will be appropriate
for attendees with a basic understanding of HTML and JavaScript.
</p>
<h2><a name="AlexStamos">Alex Stamos</a></h2>
<p>
Alex Stamos is a founding partner of iSEC Partners, LLC, a strategic
digital security organization. Alex is an experienced security engineer
and consultant specializing in application security and securing large
infrastructures, and has taught multiple classes in network and
application security. He is a leading researcher in the field of web
application and web services security and has been a featured speaker at
top industry conferences such as Black Hat, CanSecWest, DefCon, SyScan,
Microsoft BlueHat and OWASP App Sec. He holds a BSEE from the University
of California, Berkeley.
</p>

<hr>
<h2><a name="MichaelSwiftAbstract">Improving the Reliability of Commodity Operating Systems</a></h2>
<p>
Despite decades of research in fault tolerance, commodity operating systems,
such as Windows and Linux, continue to crash. In this talk, I will describe
a new reliability subsystem for operating systems that prevents the most
common cause of crashes, device driver failures, without requiring changes
to drivers themselves. To date, the subsystem has been used in Linux to
prevent system crashes in the presence of driver failures, recover failed
drivers transparently to the OS and applications, and update drivers "on the
fly" without requiring a system reboot after installation. Measurements show
that the system is extremely effective at protecting the OS from driver
failures, while imposing little runtime overhead.
</p>
<h2><a name="MichaelSwift" href="http://www.cs.wisc.edu/~swift/">Prof. Michael Swift</a></h2>
<p>
Mike Swift started as an assistant processor at the University of Wisconsin,
Madison, in January 2006. He grew up in Amherst, Massachusetts and received
a B.A. from Cornell University in 1992. After college, he worked at
Microsoft in the Windows group, where he implemented authentication and
access control functionality in Windows Cairo, Windows NT, and Windows 2000.
From 1998 to 2006 he was been a graduate student at the University of
Washington, studying large-scale clusters, simultaneous multithreading and
operating system reliability.
</p>
</div>

<?php include 'includes/_bottom.php'; ?>
